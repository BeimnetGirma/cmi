generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model department {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(40)
  research research[]
}

model research {
  id         Int         @id @default(autoincrement())
  title      String      @db.VarChar(150)
  year       DateTime    @db.Date
  path       String      @db.VarChar(150)
  deptId     Int?
  department department? @relation(fields: [deptId], references: [id], onDelete: Restrict, map: "dept_fk")

  @@index([deptId], map: "dept_fk_idx")
}

model manual {
  id    String @id @default(uuid())
  title String
  path  String
}

model resource {
  id    String @id @default(uuid())
  title String
  path  String
  type  String
}

model resourceType {
  id      String  @id @default(uuid())
  name    String
  name_am String? @db.VarChar(255)
}

model Image {
  id         String   @id @default(uuid())
  caption    String   @db.VarChar(255)
  tags       String   @db.Text
  uploadedAt DateTime @default(now())
  imagePath  String   @db.VarChar(1000)

  @@index([tags(length: 255)], map: "tags_idx")
}

model Executive {
  id                   String   @id @default(uuid())
  departmentName       String   @db.VarChar(100)
  headName             String   @db.VarChar(100)
  headTitle            String   @db.VarChar(100)
  dutiesDescription    String   @db.Text
  imagePath            String   @db.VarChar(1000)
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  departmentName_am    String?  @db.VarChar(100)
  dutiesDescription_am String?  @db.Text
  headName_am          String?  @db.VarChar(100)
  headTitle_am         String?  @db.VarChar(100)
}

model ProfilePicture {
  id        String   @id @default(uuid())
  imagePath String   @db.VarChar(1000)
  createdAt DateTime @default(now())
}

model magazine {
  id    String @id @default(uuid())
  title String
  path  String
}

model Service {
  id        String   @id @default(uuid())
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  imageUrl     String?
  translations ServiceTranslation[]
  subservices  SubService[]
}

model ServiceTranslation {
  id        String  @id @default(uuid())
  language  String
  title     String
  summary   String?
  content   Json?
  service   Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  serviceId String
}

model SubService {
  id           String                  @id @default(uuid())
  order        Int?
  translations SubServiceTranslation[]
  link         String?
  service      Service                 @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  serviceId    String
}

model SubServiceTranslation {
  id           String     @id @default(uuid())
  language     String
  title        String
  description  String?    @db.Text
  subservice   SubService @relation(fields: [subserviceId], references: [id], onDelete: Cascade)
  subserviceId String
}

model announcement {
  id             String   @id @default(uuid())
  title          String
  description    String?  @db.Text
  //Amharic
  title_am       String?
  description_am String?  @db.Text
  attachment     String?
  link           String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Translation {
  id        Int      @id @default(autoincrement())
  key       String
  value     Json?
  language  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([key, language])
}

model VisitorCount {
  id    Int @id @default(1)
  count Int @default(0)
}

model TraineeCount {
  id    Int @id @default(1)
  count Int @default(0)
}

model BIMCount {
  id    Int @id @default(1)
  count Int @default(0)
}

model PMPCount {
  id    Int @id @default(1)
  count Int @default(0)
}

model Event {
  id             Int      @id @default(autoincrement())
  title_en       String
  title_am       String?
  description_en String   @db.Text
  description_am String?  @db.Text
  banner_en      String? // URL to image/PDF
  banner_am      String? // URL to image/PDF
  link           String? // Optional external link
  endDate        DateTime
  createdAt      DateTime @default(now())
}
