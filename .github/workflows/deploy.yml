name: Deploy Staging Next.js App

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Dev
    env:
      DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
      NEXT_PUBLIC_GHOST_URL: ${{ secrets.NEXT_PUBLIC_GHOST_URL }}
      NEXT_PUBLIC_GHOST_CONTENT_API_KEY: ${{ secrets.NEXT_PUBLIC_GHOST_CONTENT_API_KEY }}
      APP_PORT: 3001

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: Baseline Prisma DB if needed
        env:
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
          MYSQL_PWD: ${{ secrets.DEV_DATABASE_PASSWORD }}
        run: |
          echo "Checking if Prisma migration history exists..."
          if ! mysql -u ${{ secrets.DEV_DATABASE_USER }} -h cmi.gov.et -P 3350 -e "USE cmi_dev_db; SHOW TABLES LIKE '_prisma_migrations';" | grep _prisma_migrations; then
            echo "No migration table found. Resolving baseline..."
            mkdir -p prisma/migrations/20250721120000_baseline

            npx prisma migrate diff \
              --from-url="${{ secrets.DEV_DATABASE_URL }}" \
              --to-empty \
              --script > prisma/migrations/20250721120000_baseline/migration.sql
            npx prisma migrate resolve --applied 20250721120000_baseline
          else
            echo "Migration table exists. Skipping baseline."
          fi

      # - name: Run Prisma migrations
      #   env:
      #     DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
      #   run: npx prisma migrate deploy
      - name: Push Prisma schema without migrations
        env:
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
        run: npx prisma db push

      - name: Build Next.js app
        env:
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
        run: npm run build

      - name: Upload build artifacts to staging server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: ".next,public,package.json,ecosystem.config.js,prisma,src/app/i18n/locales"
          target: "/var/www/ecmi-staging"
          
      - name: Run app on staging port
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            export DATABASE_URL="${{ secrets.DEV_DATABASE_URL }}"

            cd /var/www/ecmi-staging
            npm install --omit=dev
            npm install @prisma/client
            npx prisma migrate deploy
            PORT=3001 pm2 reload cmi_dev --update-env || pm2 start npm --name cmi_dev -- run start
